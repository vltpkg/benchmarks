name: Package Manager Benchmarks
on: 
  push:
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Tools
        run: |
          npm install -g vlt
          corepack enable yarn pnpm
          curl -fsSL https://bun.sh/install | bash
          curl -fsSL https://deno.land/x/install/install.sh | sh
          sudo apt-get install -y hyperfine

      - name: Run Benchmarks
        run: |
          CLEAN='rm -rf ./node_modules/; rm -rf package-lock.json; rm -rf pnpm-lock.yaml; rm -rf yarn.lock; rm -rf .yarnrc.yml; rm -rf .yarnrc; rm -rf .npmrc; rm -rf .pnp.js; rm -rf .pnp.cjs; rm -rf .yarn; rm -rf .yarnrc; rm -rf .yarn-integrity; rm -rf .yarn-metadata.json; rm -rf bun.lockb'
          GET_PACKAGES='cd node_modules && find . -name "package.json" -type f | wc -l'

          # CLEAR CACHES
          npm cache clean --force
          rm -rf $(vlt config get cache)
          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@1 cache clean --all
          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@latest cache clean --all
          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack pnpm cache delete *
          rm -rf $(bun pm cache)
          deno clean

          echo "VERSIONS:"
          echo "npm@$(npm -v)"
          echo "vlt@$(vlt -v)"
          echo "yarn@$(COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@1 -v)"
          echo "yarn@$(COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@latest -v)"
          echo "pnpm@$(COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack pnpm@latest -v)"
          echo "bun@$(bun -v)"
          echo "deno@$(deno -v)"

          echo "BENCHMARKS:"
          hyperfine --shell=bash --warmup 3 -i --prepare 'rm -rf $(CLEAN)' 'vlt install' 'npm install' 'COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@1 install' 'COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@latest install' 'COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack pnpm@latest install' 'bun install' 'deno install --allow-scripts'

          echo "PACKAGES:"
          npm install
          echo "npm: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          vlt install
          echo "vlt: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@1 install
          echo "yarn@1: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack yarn@latest install
          echo "yarn@latest: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          COREPACK_ENABLE_STRICT=0 COREPACK_ENABLE_AUTO_PIN=0 corepack pnpm@latest install
          echo "pnpm@latest: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          bun install
          echo "bun: $($GET_PACKAGES)"
          rm -rf $(CLEAN)

          deno install --allow-scripts
          echo "deno: $($GET_PACKAGES)"
          rm -rf $(CLEAN)
          