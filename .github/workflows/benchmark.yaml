name: Package Manager Benchmarks
on: 
  push:
  workflow_dispatch:

jobs:
  benchmark:
    name: 'Benchmark'
    
    env: 
      COREPACK_ENABLE_STRICT: 0
      COREPACK_ENABLE_AUTO_PIN: 0
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

    strategy:
      fail-fast: false
      matrix:
        platform:

          - name: Linux
            os: ubuntu-latest
            shell: bash

    runs-on: ${{ matrix.platform.os }}
    
    steps:
      
      - uses: actions/checkout@v4
      
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install & Setup Package Managers & Benchmark Tools
        run: |
          cargo install hyperfine --quiet
          npm install -g npm@latest vlt@latest bun@latest deno-bin@latest --silent
          corepack enable yarn pnpm
          mkdir -p ../results/

      - name: Package Manager Versions
        run: |
          NPM_VERSION="$(npm -v)"
          VLT_VERSION="$(vlt -v)"
          YARN_VERSION="$(corepack yarn@1 -v)"
          BERRY_VERSION="$(corepack yarn@latest -v)"
          PNPM_VERSION="$(corepack pnpm@latest -v)"
          BUN_VERSION="$(bun -v)"
          DENO_VERSION="$(echo "${$(deno -v)/deno/}" | xargs)"
          ALL="npm: $NPM_VERSION /
            vlt: $VLT_VERSION /
            yarn: $YARN_VERSION /
            berry: $BERRY_VERSION /
            pnpm: $PNPM_VERSION /
            bun: $BUN_VERSION /
            deno: $DENO_VERSION"
          echo $ALL
          echo $ALL > ../results/versions

      - name: Configuration
        run: |
          echo "COREPACK_ENABLE_STRICT: ${{ env.COREPACK_ENABLE_STRICT }}"
          echo "COREPACK_ENABLE_AUTO_PIN: ${{ env.COREPACK_ENABLE_AUTO_PIN }}"
          echo "YARN_ENABLE_IMMUTABLE_INSTALLS: ${{ env.YARN_ENABLE_IMMUTABLE_INSTALLS }}"

      - name: Run Project Benchmarks (Next)        
        run: |
          bash scripts/run.sh next

      - name: Run Project Benchmarks (Astro)
        run: |
          bash scripts/run.sh astro

      - name: Run Project Benchmarks (Svelte)
        run: |
          bash scripts/run.sh svelte

      - name: Run Project Benchmarks (Vue)
        run: |
          bash scripts/run.sh vue

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: results/
