name: Package Manager Benchmarks
on: 
  push:
  workflow_dispatch:

jobs:
  benchmark:
    name: 'Benchmark'
    
    env: 
      COREPACK_ENABLE_STRICT: 0
      COREPACK_ENABLE_AUTO_PIN: 0
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

    strategy:
      fail-fast: false
      matrix:
        platform:

          - name: Linux
            os: ubuntu-latest
            shell: bash
        
          # - name: macOS
          #   os: macos-latest
          #   shell: bash
        
          # - name: Windows
          #   os: windows-latest
          #   shell: cmd

    runs-on: ${{ matrix.platform.os }}
    
    steps:
      
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Package Managers & Benchmark Tools
        run: |
          cargo install hyperfine --quiet
          npm install -g npm@latest vlt@latest bun@latest deno-bin@latest --silent
          corepack enable yarn pnpm
      
      - name: Log Package Manager Versions
        run: |
          echo "npm $(npm -v)"
          echo "vlt $(vlt -v)"
          echo "yarn $(corepack yarn@1 -v)"
          echo "yarn $(corepack yarn@latest -v)"
          echo "pnpm $(corepack pnpm@latest -v)"
          echo "bun $(bun -v)"
          echo "$(deno -v)"

      - uses: actions/checkout@v4
      - name: Run Project Benchmarks (Next)
        uses: ./.github/actions/run.yaml
        with:
          LOCATION: next
          OS: ${{ matrix.platform.os }}
      
      - name: Run Project Benchmarks (Astro)
        uses: ./.github/actions/run.yaml
        with:
          LOCATION: astro
          OS: ${{ matrix.platform.os }}
      
      - name: Run Project Benchmarks (Svelte)
        uses: ./.github/actions/run.yaml
        with:
          LOCATION: svelte
          OS: ${{ matrix.platform.os }}

      - name: Run Project Benchmarks (Vue)
        uses: ./.github/actions/run.yaml
        with:
          LOCATION: vue
          OS: ${{ matrix.platform.os }}
